/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.persistentsecurity.safeguardlm;

public class PSProlibProxy implements PSProlibProxyConstants {
  public static SWIGTYPE_p_int new_intPtr() {
    long cPtr = PSProlibProxyJNI.new_intPtr();
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public static SWIGTYPE_p_int copy_intPtr(int value) {
    long cPtr = PSProlibProxyJNI.copy_intPtr(value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public static void delete_intPtr(SWIGTYPE_p_int obj) {
    PSProlibProxyJNI.delete_intPtr(SWIGTYPE_p_int.getCPtr(obj));
  }

  public static void intPtr_assign(SWIGTYPE_p_int obj, int value) {
    PSProlibProxyJNI.intPtr_assign(SWIGTYPE_p_int.getCPtr(obj), value);
  }

  public static int intPtr_value(SWIGTYPE_p_int obj) {
    return PSProlibProxyJNI.intPtr_value(SWIGTYPE_p_int.getCPtr(obj));
  }

  public static int sgGenerateDate(int days, byte[] BYTE) {
    return PSProlibProxyJNI.sgGenerateDate(days, BYTE);
  }

  public static int sgExtractComponent(String target, byte[] arg1, byte[] arg2, byte[] arg3, byte[] arg4, byte[] arg5, byte[] arg6) {
    return PSProlibProxyJNI.sgExtractComponent(target, arg1, arg2, arg3, arg4, arg5, arg6);
  }

  public static int sgEnableComponent(String target, String component, String version, String id, String idtype, String expires, String certificate) {
    return PSProlibProxyJNI.sgEnableComponent(target, component, version, id, idtype, expires, certificate);
  }

  public static int sgDisableComponent(String target, String component, String version, String id, String idtype) {
    return PSProlibProxyJNI.sgDisableComponent(target, component, version, id, idtype);
  }

  public static int sgEnableAllComponents(String target, String file) {
    return PSProlibProxyJNI.sgEnableAllComponents(target, file);
  }

  public static int sgValidateComponent(String component, String version, String id, String idtype, String expires, String certificate) {
    return PSProlibProxyJNI.sgValidateComponent(component, version, id, idtype, expires, certificate);
  }

  public static int sgAuthorized(String target, String component, String version) {
    return PSProlibProxyJNI.sgAuthorized(target, component, version);
  }

  public static int sgExpireDays(String target, String component, String version, SWIGTYPE_p_int days) {
    return PSProlibProxyJNI.sgExpireDays(target, component, version, SWIGTYPE_p_int.getCPtr(days));
  }

  public static int sgGetLastErrorString(byte[] BYTE) {
    return PSProlibProxyJNI.sgGetLastErrorString(BYTE);
  }

  public static int sgConnect() {
    return PSProlibProxyJNI.sgConnect();
  }

  public static int sgTest(String component, String version) {
    return PSProlibProxyJNI.sgTest(component, version);
  }

  public static int sgCheckout(String component, String version) {
    return PSProlibProxyJNI.sgCheckout(component, version);
  }

  public static int sgCheckin(String component, String version) {
    return PSProlibProxyJNI.sgCheckin(component, version);
  }

  public static int sgTimer() {
    return PSProlibProxyJNI.sgTimer();
  }

  public static int sgDisconnect() {
    return PSProlibProxyJNI.sgDisconnect();
  }

  public static int sgPing() {
    return PSProlibProxyJNI.sgPing();
  }

  public static int sgShutdown() {
    return PSProlibProxyJNI.sgShutdown();
  }

  public static int sgRestart() {
    return PSProlibProxyJNI.sgRestart();
  }

  public static int sgShowClient(byte[] arg0, byte[] arg1, byte[] arg2, byte[] arg3, byte[] arg4, SWIGTYPE_p_int count) {
    return PSProlibProxyJNI.sgShowClient(arg0, arg1, arg2, arg3, arg4, SWIGTYPE_p_int.getCPtr(count));
  }

  public static int sgShowServer(byte[] arg0, byte[] arg1, byte[] arg2, byte[] arg3, SWIGTYPE_p_int count, SWIGTYPE_p_int current, byte[] arg6, byte[] arg7) {
    return PSProlibProxyJNI.sgShowServer(arg0, arg1, arg2, arg3, SWIGTYPE_p_int.getCPtr(count), SWIGTYPE_p_int.getCPtr(current), arg6, arg7);
  }

  public static int sgShowServerDetail(SWIGTYPE_p_int thread_id, SWIGTYPE_p_int sockfd, byte[] arg2, SWIGTYPE_p_int pid, byte[] arg4, byte[] arg5, byte[] arg6, byte[] arg7, byte[] arg8, SWIGTYPE_p_int count) {
    return PSProlibProxyJNI.sgShowServerDetail(SWIGTYPE_p_int.getCPtr(thread_id), SWIGTYPE_p_int.getCPtr(sockfd), arg2, SWIGTYPE_p_int.getCPtr(pid), arg4, arg5, arg6, arg7, arg8, SWIGTYPE_p_int.getCPtr(count));
  }

  public static int sgGetAttrInt(SG_ATTRTYPE attr, SWIGTYPE_p_int val) {
    return PSProlibProxyJNI.sgGetAttrInt(attr.swigValue(), SWIGTYPE_p_int.getCPtr(val));
  }

  public static int sgGetAttrStr(SG_ATTRTYPE attr, byte[] BYTE) {
    return PSProlibProxyJNI.sgGetAttrStr(attr.swigValue(), BYTE);
  }

  public static int sgSetAttrInt(SG_ATTRTYPE attr, SG_IDTYPE val) {
    return PSProlibProxyJNI.sgSetAttrInt__SWIG_0(attr.swigValue(), val.swigValue());
  }

  public static int sgSetAttrInt(SG_ATTRTYPE attr, SG_LICENSETYPE val) {
    return PSProlibProxyJNI.sgSetAttrInt__SWIG_1(attr.swigValue(), val.swigValue());
  }

  public static int sgSetAttrInt(SG_ATTRTYPE attr, SG_LANGTYPE val) {
    return PSProlibProxyJNI.sgSetAttrInt__SWIG_2(attr.swigValue(), val.swigValue());
  }

  public static int sgSetAttrInt(SG_ATTRTYPE attr, SG_ATTRTYPE val) {
    return PSProlibProxyJNI.sgSetAttrInt__SWIG_3(attr.swigValue(), val.swigValue());
  }

  public static int sgSetAttrStr(SG_ATTRTYPE attr, String val) {
    return PSProlibProxyJNI.sgSetAttrStr(attr.swigValue(), val);
  }

  public static int sgSetAttrFnJ(SG_ATTRTYPE attr, String method) {
    return PSProlibProxyJNI.sgSetAttrFnJ(attr.swigValue(), method);
  }

  public static int sgSetAttrInt(SG_ATTRTYPE attr, int val) {
    return PSProlibProxyJNI.sgSetAttrInt__SWIG_4(attr.swigValue(), val);
  }

  public static int sgArc4(int direction, String key, String in, byte[] BYTE) {
    return PSProlibProxyJNI.sgArc4(direction, key, in, BYTE);
  }

  public static int sgDash(int direction, String inkey, byte[] BYTE) {
    return PSProlibProxyJNI.sgDash(direction, inkey, BYTE);
  }

  public static int sgEnableComponentLine(String target, byte[] BYTE) {
    return PSProlibProxyJNI.sgEnableComponentLine(target, BYTE);
  }

  public static int sgPaActivate(String web, int port, SG_ACTIVATETYPE activatetype, String cust, String component, String version, String email, byte[] arg7, byte[] arg8) {
    return PSProlibProxyJNI.sgPaActivate(web, port, activatetype.swigValue(), cust, component, version, email, arg7, arg8);
  }

  public static int sgPaGetInstallationCode(SG_IDTYPE idtype, byte[] BYTE) {
    return PSProlibProxyJNI.sgPaGetInstallationCode(idtype.swigValue(), BYTE);
  }

  public static int sgPaGetDemoActivationKeys(String web, int port, String component, String version, String email, String ic, byte[] arg6, byte[] arg7) {
    return PSProlibProxyJNI.sgPaGetDemoActivationKeys(web, port, component, version, email, ic, arg6, arg7);
  }

  public static int sgPaGetPaidActivationKeys(String web, int port, String cust, String component, String version, String email, String ic, byte[] arg7, byte[] arg8) {
    return PSProlibProxyJNI.sgPaGetPaidActivationKeys(web, port, cust, component, version, email, ic, arg7, arg8);
  }

  public static int sgPaAssembleKeys(String ic, String lk, String ak, byte[] BYTE) {
    return PSProlibProxyJNI.sgPaAssembleKeys(ic, lk, ak, BYTE);
  }

  public static int sgPaDecodeKey(String lk, byte[] arg1, byte[] arg2, byte[] arg3, byte[] arg4) {
    return PSProlibProxyJNI.sgPaDecodeKey(lk, arg1, arg2, arg3, arg4);
  }

  public static int sgPaShutdown(String web, int port, String password) {
    return PSProlibProxyJNI.sgPaShutdown(web, port, password);
  }

  public static int sgPaRestart(String web, int port, String password) {
    return PSProlibProxyJNI.sgPaRestart(web, port, password);
  }

  public static int sgPaShowlog(String web, int port, String password, byte[] BYTE) {
    return PSProlibProxyJNI.sgPaShowlog(web, port, password, BYTE);
  }

}
